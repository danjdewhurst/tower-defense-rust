name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Configure Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: test-${{ hashFiles('**/Cargo.lock') }}
      
    - name: Cache system dependencies
      uses: actions/cache@v4
      id: cache-deps
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/ci.yml') }}
        
    - name: Install system dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          libx11-dev \
          libasound2-dev \
          libudev-dev \
          libxkbcommon-x11-0

    - name: Run tests
      run: cargo test --verbose

  check:
    name: Rust Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Configure Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: check-${{ hashFiles('**/Cargo.lock') }}
      
    - name: Cache system dependencies
      uses: actions/cache@v4
      id: cache-deps
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/ci.yml') }}
        
    - name: Install system dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          libx11-dev \
          libasound2-dev \
          libudev-dev \
          libxkbcommon-x11-0

    - name: Check code
      run: cargo check --verbose

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
        
    - name: Configure Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: clippy-${{ hashFiles('**/Cargo.lock') }}
      
    - name: Cache system dependencies
      uses: actions/cache@v4
      id: cache-deps
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/ci.yml') }}
        
    - name: Install system dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          libx11-dev \
          libasound2-dev \
          libudev-dev \
          libxkbcommon-x11-0

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
        
    - name: Check formatting
      run: cargo fmt --all -- --check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Configure Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: build-release-${{ hashFiles('**/Cargo.lock') }}
      
    - name: Cache system dependencies
      uses: actions/cache@v4
      id: cache-deps
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/ci.yml') }}
        
    - name: Install system dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          libx11-dev \
          libasound2-dev \
          libudev-dev \
          libxkbcommon-x11-0

    - name: Build project
      run: cargo build --verbose --release